@tailwind base;
@tailwind components;
@tailwind utilities;

:root {
  background-color: #141d29;
}

.heading {
  @apply text-2xl
}

.button-primary {
  @apply btn bg-primary text-white hover:bg-[#eb244b]
}

::selection {
  background-color: #e93559;
  color: white;
}

.main {
    width: 100vw;
    min-height: 100vh;
    position: fixed;
    display: flex;
    justify-content: center;
    padding: 120px 24px 160px 24px;
    pointer-events: none;
}

.main:before {
    /* background: radial-gradient(circle, rgba(2, 0, 36, 0) 0, # 100%); */
    position: absolute;
    content: "";
    z-index: 2;
    width: 100%;
    height: 100%;
    top: 0;
}

.main:after {
    content: "";
    /* background-image: url("../assets/grid.svg"); */
    z-index: 1;
    position: absolute;
    width: 100%;
    height: 100%;
    top: 0;
    opacity: 0.4;
    filter: invert(1);
}

.gradient {
  height: fit-content;
  z-index: 3;
  width: 100%;
  max-width: 640px;
  /* Four gradients at the extremities with a complementary warm hue (approx. hue 34) */
  background-image: 
      radial-gradient(at top left, rgb(232, 91, 91) 0px, transparent 50%),
      radial-gradient(at top right, rgb(133, 16, 16) 0px, transparent 50%),
      radial-gradient(at bottom left, rgb(71, 189, 235) 0px, transparent 50%),
      radial-gradient(at bottom right, rgb(216, 71, 235) 0px, transparent 50%);
  position: absolute;
  content: "";
  width: 100%;
  height: 100%;
  filter: blur(100px) saturate(150%);
  top: 80px;
  opacity: 0.15;
}



.body {
  --radius: 8px;
  --border: 4px;
  --height: 50px;
  --speed: 0.25s;
  display: grid;
  place-items: center;
  align-content: center;
  font-family: "SF Pro Text", "SF Pro Icons", "AOS Icons", "Helvetica Neue",
    Helvetica, Arial, sans-serif, system-ui;
  margin-bottom: 1.5rem;
}

.tabs {
  height: var(--height);
  display: grid;
  grid-auto-flow: column;
  background: transparent;
  border-radius: var(--radius);
  grid-auto-columns: 1fr;
  position: relative;
  border: var(--border) solid hsl(0 0% 0%);
  color: white;
  width: 100%; /* Fills its parent container */
  max-width: 800px; /* Optional: prevent it from getting too wide */
  text-align: center;
}

.tabs {
  --ease: linear(
    0,
    0.1641 3.52%,
    0.311 7.18%,
    0.4413 10.99%,
    0.5553 14.96%,
    0.6539 19.12%,
    0.738 23.5%,
    0.8086 28.15%,
    0.8662 33.12%,
    0.9078 37.92%,
    0.9405 43.12%,
    0.965 48.84%,
    0.9821 55.28%,
    0.992 61.97%,
    0.9976 70.09%,
    1
  );
  --is-checked: 0;
}

.tabs > .input,
.sr-only {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border-width: 0;
}

.tabs:has(.input:checked) {
  --is-checked: 1;
}

.tabs:has(:checked:nth-of-type(1)) {
  --active: 0;
}
.tabs:has(:checked:nth-of-type(2)) {
  --active: 1;
}
.tabs:has(:checked:nth-of-type(3)) {
  --active: 2;
}
.tabs:has(:checked:nth-of-type(4)) {
  --active: 3;
}

.tabs :checked + .label {
  --highlight: 1;
}

.tabs:has(.input:nth-of-type(2)) {
  --count: 2;
}
.tabs:has(.input:nth-of-type(3)) {
  --count: 3;
}
.tabs:has(.input:nth-of-type(4)) {
  --count: 4;
}

.tabs .label {
  padding: 0 clamp(10px, 10px + 10px, 20px);
  cursor: pointer;
  text-align: center;
  height: 100%;
  display: grid;
  border-radius: calc(var(--radius) - var(--border));
  place-items: center;
  color: hsl(0 0% 100% / calc(0.5 + var(--highlight, 0)));
  transition: background, color;
  transition-duration: 0.25s;
  transition-timing-function: var(--ease, ease);
  position: relative;
  z-index: 1;
  align-items: center;
  justify-content: center;
  display: flex;
}

.input:not(:checked) + .label:hover {
  --highlight: 0.35;
  background: hsl(0 0% 20%);
}

.tabs::after {
  pointer-events: none;
  content: "";
  width: calc(100% / var(--count));
  height: 100%;
  background: #e93559;
  position: absolute;
  border-radius: calc(var(--radius) - var(--border));
  translate: calc(var(--active, 0) * 100%) 0;
  transition: translate, outline-color;
  transition-duration: var(--speed);
  transition-timing-function: var(--ease, ease);
  outline: 2px solid transparent;
  opacity: var(--is-checked, 0);
}


.tabs:has(:focus-visible)::after {
  outline-color: red;
}
